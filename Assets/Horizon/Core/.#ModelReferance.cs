//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using UnityEngine;
using System.Collections.Generic;
using System.Linq;

#if UNITY_EDITOR
using UnityEditor;
#endif

namespace Horizon.Core
{
#if UNITY_EDITOR
	public class ModelAssetWatcher : AssetPostprocessor
	{
		void OnPostprocessModel(GameObject go)
		{
			Debug.Log(go.name);
			Debug.Log(assetImporter.assetPath);
			Debug.Log(AssetDatabase.LoadAssetAtPath<GameObject>(assetImporter.assetPath));
		}
	}
#endif

	public class MeshReferance
	{
		public MeshReferance(GameObject Parent)
		{
			this.Parent = Parent;
		}

		public readonly GameObject Parent;

		public GameObject model;

#if UNITY_EDITOR
		private void RefreshMesh()
		{
			Transform mesh = Parent.transform.Find("mesh");
			if(mesh == null)
			{
				GameObject go = new GameObject("mesh");
				go.transform.parent = Parent.transform;
				mesh = go.transform;
				mesh.localPosition = Vector3.zero;
				mesh.localRotation = Quaternion.identity;
				mesh.localScale = new Vector3(1,1,1);
			}

			var children = new List<GameObject>();
			foreach (Transform child in mesh) children.Add(child.gameObject);
			children.ForEach(child => Transform.DestroyImmediate(child));

			(PrefabUtility.InstantiatePrefab(model) as GameObject).transform.parent = mesh;
		}
#endif
	}
}

