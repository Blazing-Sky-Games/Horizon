//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using Horizon.Combat.Models;
using Horizon.Core.Editor;
using UnityEngine;
using Horizon.Core.ExtensionMethods;
using Horizon.Core.WeakSubscription;
using Horizon.Core;


namespace Horizon.Combat.Editor
{
	public class CellSceneHighlight : ViewBase<Cell>
	{
		protected override void Init ()
		{
			base.Init ();

			PassableColor = Color.cyan.SetAlpha(0.1f);
			ImpassableColor = Color.black.SetAlpha(0.4f);
		}

		public override void SceneViewUpdate ()
		{
			base.SceneViewUpdate ();
			UnityEngine.Gizmos.color = model.Passable ? PassableColor : ImpassableColor;
			UnityEngine.Gizmos.DrawMesh(rectangleMesh,model.transform.position,model.transform.rotation,model.transform.localScale);
		}

		private Mesh rectangleMesh
		{
			get
			{
				if(m_rectangleMesh == null)
				{
					m_rectangleMesh = new Mesh();
					m_rectangleMesh.hideFlags = HideFlags.HideAndDontSave;
					m_rectangleMesh.vertices = new Vector3[]{ 
						new Vector3(0.5f,0.0f,0.5f), 
						new Vector3(-0.5f,0.0f,0.5f), 
						new Vector3(-0.5f,0.0f,-0.5f), 
						new Vector3(0.5f,0.0f,-0.5f)
					};
					
					m_rectangleMesh.triangles = new int[]{
						2,1,0,
						3,2,0
					};
					
					m_rectangleMesh.normals = new Vector3[]
					{
						Vector3.up,
						Vector3.up,
						Vector3.up,
						Vector3.up
					};
				}
				
				return m_rectangleMesh;
			}
		}
		
		private static Mesh m_rectangleMesh;

		private Color PassableColor;
		private Color ImpassableColor;
	}
}

