//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Linq;
using Horizon.Combat.Models;
using Horizon.Core;
using UnityEngine;
using Horizon.Core.WeakSubscription;
using Horizon.Core.GL;


namespace Horizon.Combat.Views
{
	public class GridView : ViewBase<Grid>
	{
		//what color the grid lins will be
		public Color GridLineColor = Color.black;

		protected override void Init ()
		{
			base.Init ();

			//do gl drawing onpostrender
			Camera.main.GetComponent<HorizonCamera>().renderCallbacks.PostRenderEvent +=
			(sender,args) => 
			{
				DrawGridlines();
			};
		} 
		private void DrawGridlines()
		{
			GLUtility.DefaultMaterial.SetPass (0);
			GLUtility.DefaultMaterial.color = GridLineColor * new Color(1,1,1,0.8f);
			GL.Begin( GL.LINES );
			GL.Color(GridLineColor * new Color(1,1,1,0.8f));

			//iterate over the gridlins. if one of the adjacent cells is passable, draw the gridline
			foreach (GridLine line in model.GridLines)
			{
				if(line.AdjacentCells.Any(cell => cell.Passable))
				{
					GL.Vertex3(line.start.x,line.start.y,line.start.z);
					GL.Vertex3(line.end.x,line.end.y,line.end.z);
				}
			}

			GL.End();
		}
	}
}
